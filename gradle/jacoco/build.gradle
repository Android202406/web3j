apply plugin: 'jacoco'

task jacocoRootTestReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
//    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
//    dependsOn = subprojects.test
//    getSourceDirectories().from(subprojects.sourceSets.main.allSource.srcDirs)
//    getAdditionalSourceDirs().from(subprojects.sourceSets.main.allSource.srcDirs)
//    getClassDirectories().from(subprojects.sourceSets.main.output)
//    reports { xml.enabled true }
//
//    doFirst {
//        getExecutionData().from(executionData.findAll { it.exists() })
//    }
//
//    afterEvaluate {
//        getClassDirectories().from(files(classDirectories.files.collect {
//            fileTree(dir: it,
//                    exclude: [
//                            'org/web3j/abi/datatypes/generated/**',
//                            'org/web3j/tuples/generated/**',
//                            'org/web3j/ens/contracts/generated/**',
//                            'org/gradle/**'
//                    ])
//        }))
//    }


    def executions = subprojects.findAll { subproject ->
        if (!subproject.path.contains(":docs")) {
            subproject.tasks.withType(Test).each{ task ->
                dependsOn(task)
                mustRunAfter(task)
            }
        }
        def execFile = subproject.layout.buildDirectory.file('jacoco/test.exec').get().asFile
        logger.info "${subproject.name} with execution file ${execFile}"
        true
    }.collect {subproject ->
        subproject.layout.buildDirectory.file('jacoco/test.exec').get().asFile
    }
    logger.info "Coverage execution data files: ${executions}"
    executionData.from(executions)

    reports {
        xml.enabled true
    }
    additionalSourceDirs.setFrom(files(subprojects.sourceSets.main.allSource.srcDirs))
    sourceDirectories.setFrom(files(subprojects.sourceSets.main.allSource.srcDirs))
    classDirectories.setFrom(
            files(subprojects.sourceSets.main.output).collect {
                fileTree(dir: it,
                        include: ['**/*.*'],
                        exclude: rootProject.excludedFilesFromTestCoverage
                )
            })
}

jacoco {
    toolVersion = "0.8.4"
}

